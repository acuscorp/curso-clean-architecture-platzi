Index: app/src/main/kotlin/com/platzi/android/rickandmorty/ui/CharacterListFragment.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.platzi.android.rickandmorty.ui\r\n\r\nimport android.content.Context\r\nimport android.os.Bundle\r\nimport android.view.LayoutInflater\r\nimport android.view.View\r\nimport android.view.ViewGroup\r\nimport androidx.databinding.DataBindingUtil\r\nimport androidx.fragment.app.Fragment\r\nimport androidx.lifecycle.Observer\r\nimport androidx.recyclerview.widget.GridLayoutManager\r\nimport androidx.recyclerview.widget.RecyclerView\r\nimport com.platzi.android.rickandmorty.R\r\nimport com.platzi.android.rickandmorty.adapters.CharacterGridAdapter\r\nimport com.platzi.android.rickandmorty.api.APIConstants.BASE_API_URL\r\nimport com.platzi.android.rickandmorty.api.CharacterRequest\r\nimport com.platzi.android.rickandmorty.databinding.FragmentCharacterListBinding\r\nimport com.platzi.android.rickandmorty.domain.Character\r\nimport com.platzi.android.rickandmorty.presentation.CharacterListViewModel\r\nimport com.platzi.android.rickandmorty.presentation.CharacterListViewModel.CharacterListNavigation\r\nimport com.platzi.android.rickandmorty.presentation.CharacterListViewModel.CharacterListNavigation.*\r\nimport com.platzi.android.rickandmorty.presentation.utils.Event\r\nimport com.platzi.android.rickandmorty.usecases.GetAllCharactersUseCase\r\nimport com.platzi.android.rickandmorty.utils.getViewModel\r\nimport com.platzi.android.rickandmorty.utils.setItemDecorationSpacing\r\nimport com.platzi.android.rickandmorty.utils.showLongToast\r\nimport kotlinx.android.synthetic.main.fragment_character_list.*\r\n\r\n\r\nclass CharacterListFragment : Fragment() {\r\n\r\n    //region Fields\r\n\r\n    private lateinit var characterGridAdapter: CharacterGridAdapter\r\n    private lateinit var listener: OnCharacterListFragmentListener\r\n\r\n    private val characterRequest: CharacterRequest by lazy {\r\n        CharacterRequest(BASE_API_URL)\r\n    }\r\n\r\n    private val getAllCharactersUseCase: GetAllCharactersUseCase by lazy {\r\n        GetAllCharactersUseCase(characterRequest)\r\n    }\r\n\r\n    private val characterListViewModel: CharacterListViewModel by lazy {\r\n        getViewModel { CharacterListViewModel(getAllCharactersUseCase) }\r\n    }\r\n\r\n    private val onScrollListener: RecyclerView.OnScrollListener by lazy {\r\n        object: RecyclerView.OnScrollListener() {\r\n            override fun onScrolled(recyclerView: RecyclerView, dx: Int, dy: Int) {\r\n                super.onScrolled(recyclerView, dx, dy)\r\n\r\n                val layoutManager = recyclerView.layoutManager as GridLayoutManager\r\n                val visibleItemCount: Int = layoutManager.childCount\r\n                val totalItemCount: Int = layoutManager.itemCount\r\n                val firstVisibleItemPosition: Int = layoutManager.findFirstVisibleItemPosition()\r\n\r\n                characterListViewModel.onLoadMoreItems(visibleItemCount, firstVisibleItemPosition, totalItemCount)\r\n            }\r\n        }\r\n    }\r\n\r\n    //endregion\r\n\r\n    //region Override Methods & Callbacks\r\n\r\n    override fun onAttach(context: Context) {\r\n        super.onAttach(context)\r\n        try{\r\n            listener = context as OnCharacterListFragmentListener\r\n        }catch (e: ClassCastException){\r\n            throw ClassCastException(\"$context must implement OnCharacterListFragmentListener\")\r\n        }\r\n    }\r\n\r\n    override fun onCreateView(\r\n        inflater: LayoutInflater,\r\n        container: ViewGroup?,\r\n        savedInstanceState: Bundle?\r\n    ): View? {\r\n        return DataBindingUtil.inflate<FragmentCharacterListBinding>(\r\n            inflater,\r\n            R.layout.fragment_character_list,\r\n            container,\r\n            false\r\n        ).apply {\r\n            lifecycleOwner = this@CharacterListFragment\r\n        }.root\r\n    }\r\n\r\n    override fun onViewCreated(view: View, savedInstanceState: Bundle?) {\r\n        super.onViewCreated(view, savedInstanceState)\r\n\r\n        characterGridAdapter = CharacterGridAdapter { character ->\r\n            listener.openCharacterDetail(character)\r\n        }.also {\r\n            setHasOptionsMenu(true)\r\n        }\r\n\r\n        rvCharacterList.run{\r\n            addOnScrollListener(onScrollListener)\r\n            setItemDecorationSpacing(resources.getDimension(R.dimen.list_item_padding))\r\n\r\n            adapter = characterGridAdapter\r\n        }\r\n\r\n        srwCharacterList.setOnRefreshListener {\r\n            characterListViewModel.onRetryGetAllCharacter(rvCharacterList.adapter?.itemCount ?: 0)\r\n        }\r\n\r\n        characterListViewModel.events.observe(this, Observer(this::validateEvents))\r\n\r\n        characterListViewModel.onGetAllCharacters()\r\n    }\r\n\r\n    //endregion\r\n\r\n    //region Private Methods\r\n\r\n    private fun validateEvents(event: Event<CharacterListNavigation>?) {\r\n        event?.getContentIfNotHandled()?.let { navigation ->\r\n            when(navigation) {\r\n                is ShowCharacterError -> navigation.run {\r\n                    context?.showLongToast(\"Error -> ${error.message}\")\r\n                }\r\n                is ShowCharacterList -> navigation.run {\r\n                    characterGridAdapter.addData(characterList)\r\n                }\r\n                HideLoading -> {\r\n                    srwCharacterList.isRefreshing = false\r\n                }\r\n                ShowLoading -> {\r\n                    srwCharacterList.isRefreshing = true\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    //endregion\r\n\r\n    //region Inner Classes & Interfaces\r\n\r\n    interface OnCharacterListFragmentListener {\r\n        fun openCharacterDetail(character: Character)\r\n    }\r\n\r\n    //endregion\r\n\r\n    //region Companion object\r\n\r\n    companion object {\r\n\r\n        fun newInstance(args: Bundle? = Bundle()) = CharacterListFragment().apply {\r\n            arguments = args\r\n        }\r\n    }\r\n\r\n    //endregion\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/kotlin/com/platzi/android/rickandmorty/ui/CharacterListFragment.kt	(revision 9c144a408bc58f8be237513c0c1cccbde003e498)
+++ app/src/main/kotlin/com/platzi/android/rickandmorty/ui/CharacterListFragment.kt	(date 1603947597262)
@@ -10,10 +10,13 @@
 import androidx.lifecycle.Observer
 import androidx.recyclerview.widget.GridLayoutManager
 import androidx.recyclerview.widget.RecyclerView
+import com.acuscorp.data.CharacterRepository
+import com.acuscorp.data.RemoteCharacterDataSource
 import com.platzi.android.rickandmorty.R
 import com.platzi.android.rickandmorty.adapters.CharacterGridAdapter
 import com.platzi.android.rickandmorty.api.APIConstants.BASE_API_URL
 import com.platzi.android.rickandmorty.api.CharacterRequest
+import com.platzi.android.rickandmorty.api.CharacterRetrofitDataSource
 import com.platzi.android.rickandmorty.databinding.FragmentCharacterListBinding
 import com.platzi.android.rickandmorty.domain.Character
 import com.platzi.android.rickandmorty.presentation.CharacterListViewModel
@@ -37,9 +40,16 @@
     private val characterRequest: CharacterRequest by lazy {
         CharacterRequest(BASE_API_URL)
     }
+    private val remoteCharacterDataSource: RemoteCharacterDataSource by lazy {
+        CharacterRetrofitDataSource(characterRequest)
+    }
+
+    private val characterRepository: CharacterRepository by lazy {
+        CharacterRepository(remoteCharacterDataSource)
+    }
 
     private val getAllCharactersUseCase: GetAllCharactersUseCase by lazy {
-        GetAllCharactersUseCase(characterRequest)
+        GetAllCharactersUseCase(characterRepository)
     }
 
     private val characterListViewModel: CharacterListViewModel by lazy {
Index: app/src/main/kotlin/com/platzi/android/rickandmorty/usecases/GetAllCharactersUseCase.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.platzi.android.rickandmorty.usecases\r\n\r\nimport com.platzi.android.rickandmorty.api.*\r\nimport com.platzi.android.rickandmorty.domain.Character\r\nimport io.reactivex.Single\r\nimport io.reactivex.android.schedulers.AndroidSchedulers\r\nimport io.reactivex.schedulers.Schedulers\r\n\r\nclass GetAllCharactersUseCase(\r\n    private val characterRequest: CharacterRequest\r\n) {\r\n\r\n    fun invoke(currentPage: Int): Single<List<Character>> = characterRequest\r\n        .getService<CharacterService>()\r\n        .getAllCharacters(currentPage)\r\n        .map(CharacterResponseServer::toCharacterDomainList)\r\n        .observeOn(AndroidSchedulers.mainThread())\r\n        .subscribeOn(Schedulers.io())\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/kotlin/com/platzi/android/rickandmorty/usecases/GetAllCharactersUseCase.kt	(revision 9c144a408bc58f8be237513c0c1cccbde003e498)
+++ app/src/main/kotlin/com/platzi/android/rickandmorty/usecases/GetAllCharactersUseCase.kt	(date 1603947086586)
@@ -1,5 +1,6 @@
 package com.platzi.android.rickandmorty.usecases
 
+import com.acuscorp.data.CharacterRepository
 import com.platzi.android.rickandmorty.api.*
 import com.platzi.android.rickandmorty.domain.Character
 import io.reactivex.Single
@@ -7,13 +8,9 @@
 import io.reactivex.schedulers.Schedulers
 
 class GetAllCharactersUseCase(
-    private val characterRequest: CharacterRequest
+    private val characterRepository: CharacterRepository
 ) {
 
-    fun invoke(currentPage: Int): Single<List<Character>> = characterRequest
-        .getService<CharacterService>()
-        .getAllCharacters(currentPage)
-        .map(CharacterResponseServer::toCharacterDomainList)
-        .observeOn(AndroidSchedulers.mainThread())
-        .subscribeOn(Schedulers.io())
+    fun invoke(currentPage: Int): Single<List<Character>> = characterRepository.getAllCharacters(currentPage)
+
 }
Index: app/build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>apply plugin: 'com.android.application'\r\napply plugin: 'kotlin-android'\r\napply plugin: 'kotlin-android-extensions'\r\napply plugin: 'kotlin-kapt'\r\n\r\nandroid {\r\n    compileSdkVersion rootProject.compileSdkVersion\r\n\r\n    defaultConfig {\r\n        applicationId \"com.platzi.android.rickandmorty\"\r\n        minSdkVersion rootProject.minSdkVersion\r\n        targetSdkVersion rootProject.targetSdkVersion\r\n        versionCode rootProject.versionCode\r\n        versionName rootProject.versionName\r\n\r\n        testInstrumentationRunner \"androidx.test.runner.AndroidJUnitRunner\"\r\n    }\r\n\r\n    buildTypes {\r\n        release {\r\n            minifyEnabled false\r\n            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'\r\n        }\r\n    }\r\n\r\n    dataBinding {\r\n        enabled true\r\n    }\r\n\r\n    kotlinOptions {\r\n        jvmTarget = \"1.8\"\r\n    }\r\n\r\n    sourceSets {\r\n        main.java.srcDirs += 'src/main/java'\r\n        main.java.srcDirs += 'src/main/kotlin'\r\n        test.java.srcDirs += 'src/test/java'\r\n        test.java.srcDirs += 'src/test/kotlin'\r\n    }\r\n}\r\n\r\nandroidExtensions {\r\n    experimental = true\r\n}\r\n\r\ndependencies {\r\n    //Project\r\n    implementation project(\":domain\")\r\n\r\n    //Kotlin\r\n    implementation kotlinLib\r\n\r\n    //KTX\r\n    implementation ktxLib\r\n\r\n    //Glide\r\n    implementation glideLib\r\n    annotationProcessor glideCompiler\r\n\r\n    //Gson\r\n    implementation gsonLib\r\n\r\n    //Material\r\n    implementation materialLib\r\n\r\n    //Reactive Streams\r\n    implementation reactiveStreamsLib\r\n\r\n    //Retrofit\r\n    implementation okHttpInterceptorLib\r\n    implementation retrofitRxJavaLib\r\n    implementation retrofitGsonLib\r\n\r\n    //Room\r\n    api roomLib\r\n    kapt roomCompiler\r\n    implementation roomRxJavaLib\r\n\r\n    //RxJava\r\n    implementation rxAndroidLib\r\n    implementation rxJavaLib\r\n\r\n    // View\r\n    implementation appCompatLib\r\n    implementation cardViewLib\r\n    implementation constraintLayoutLib\r\n    implementation recyclerViewLib\r\n    implementation swipeRefreshLayoutLib\r\n    implementation viewPagerLib\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/build.gradle	(revision 9c144a408bc58f8be237513c0c1cccbde003e498)
+++ app/build.gradle	(date 1603655668311)
@@ -46,6 +46,7 @@
 dependencies {
     //Project
     implementation project(":domain")
+    implementation project(":data")
 
     //Kotlin
     implementation kotlinLib
Index: .idea/compiler.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"CompilerConfiguration\">\r\n    <bytecodeTargetLevel>\r\n      <module name=\"domain\" target=\"1.7\" />\r\n    </bytecodeTargetLevel>\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/compiler.xml	(revision 9c144a408bc58f8be237513c0c1cccbde003e498)
+++ .idea/compiler.xml	(date 1603655533376)
@@ -1,7 +1,7 @@
 <?xml version="1.0" encoding="UTF-8"?>
 <project version="4">
   <component name="CompilerConfiguration">
-    <bytecodeTargetLevel>
+    <bytecodeTargetLevel target="1.8">
       <module name="domain" target="1.7" />
     </bytecodeTargetLevel>
   </component>
Index: app/src/main/kotlin/com/platzi/android/rickandmorty/api/APIDataSources.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/kotlin/com/platzi/android/rickandmorty/api/APIDataSources.kt	(date 1603946895181)
+++ app/src/main/kotlin/com/platzi/android/rickandmorty/api/APIDataSources.kt	(date 1603946895181)
@@ -0,0 +1,20 @@
+package com.platzi.android.rickandmorty.api
+
+import com.acuscorp.data.RemoteCharacterDataSource
+import com.platzi.android.rickandmorty.domain.Character
+import io.reactivex.Single
+import io.reactivex.android.schedulers.AndroidSchedulers
+import io.reactivex.schedulers.Schedulers
+
+class CharacterRetrofitDataSource(
+    private val characterRequest: CharacterRequest
+): RemoteCharacterDataSource{
+    override fun getAllCharacters(page: Int): Single<List<Character>> {
+        return characterRequest
+            .getService<CharacterService>()
+            .getAllCharacters(page)
+            .map(CharacterResponseServer::toCharacterDomainList)
+            .observeOn(AndroidSchedulers.mainThread())
+            .subscribeOn(Schedulers.io())
+    }
+}
\ No newline at end of file
Index: data/.gitignore
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- data/.gitignore	(date 1603655485548)
+++ data/.gitignore	(date 1603655485548)
@@ -0,0 +1,1 @@
+/build
\ No newline at end of file
Index: gradle/wrapper/gradle-wrapper.properties
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>#Sun Jun 28 20:11:20 CDT 2020\r\ndistributionBase=GRADLE_USER_HOME\r\ndistributionPath=wrapper/dists\r\nzipStoreBase=GRADLE_USER_HOME\r\nzipStorePath=wrapper/dists\r\ndistributionUrl=https\\://services.gradle.org/distributions/gradle-6.1.1-all.zip\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>windows-1252
===================================================================
--- gradle/wrapper/gradle-wrapper.properties	(revision 9c144a408bc58f8be237513c0c1cccbde003e498)
+++ gradle/wrapper/gradle-wrapper.properties	(date 1603947353871)
@@ -1,6 +1,6 @@
-#Sun Jun 28 20:11:20 CDT 2020
+#Wed Oct 28 22:55:53 CST 2020
 distributionBase=GRADLE_USER_HOME
 distributionPath=wrapper/dists
 zipStoreBase=GRADLE_USER_HOME
 zipStorePath=wrapper/dists
-distributionUrl=https\://services.gradle.org/distributions/gradle-6.1.1-all.zip
+distributionUrl=https\://services.gradle.org/distributions/gradle-6.5-bin.zip
Index: data/build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- data/build.gradle	(date 1603655607969)
+++ data/build.gradle	(date 1603655607969)
@@ -0,0 +1,40 @@
+plugins {
+    id 'com.android.library'
+    id 'kotlin-android'
+}
+
+android {
+    compileSdkVersion 30
+    buildToolsVersion "30.0.2"
+
+    defaultConfig {
+        minSdkVersion 30
+        targetSdkVersion 30
+        versionCode 1
+        versionName "1.0"
+
+        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
+        consumerProguardFiles "consumer-rules.pro"
+    }
+
+    buildTypes {
+        release {
+            minifyEnabled false
+            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
+        }
+    }
+    compileOptions {
+        sourceCompatibility JavaVersion.VERSION_1_8
+        targetCompatibility JavaVersion.VERSION_1_8
+    }
+    kotlinOptions {
+        jvmTarget = '1.8'
+    }
+}
+
+dependencies {
+
+    implementation project(":domain")
+    implementation kotlinLib
+    implementation rxJavaLib
+}
\ No newline at end of file
Index: data/src/main/AndroidManifest.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- data/src/main/AndroidManifest.xml	(date 1603655486111)
+++ data/src/main/AndroidManifest.xml	(date 1603655486111)
@@ -0,0 +1,5 @@
+<?xml version="1.0" encoding="utf-8"?>
+<manifest xmlns:android="http://schemas.android.com/apk/res/android"
+    package="com.acuscorp.data">
+
+</manifest>
\ No newline at end of file
Index: build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>// Top-level build file where you can add configuration options common to all sub-projects/modules.\r\n\r\nbuildscript {\r\n    ext.kotlin_version = '1.3.72'\r\n    ext.mockK_version = '1.9.3'\r\n    repositories {\r\n        google()\r\n        jcenter()\r\n        \r\n    }\r\n    dependencies {\r\n        classpath 'com.android.tools.build:gradle:4.0.1'\r\n        classpath \"org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version\"\r\n\r\n        // NOTE: Do not place your application dependencies here; they belong\r\n        // in the individual module build.gradle files\r\n    }\r\n}\r\n\r\nallprojects {\r\n    repositories {\r\n        google()\r\n        jcenter()\r\n        \r\n    }\r\n}\r\n\r\next{\r\n    //SDK & Tools\r\n    minSdkVersion = 21\r\n    targetSdkVersion = 29\r\n    compileSdkVersion = 29\r\n    versionCode = 1\r\n    versionName = \"1.0\"\r\n\r\n    //Versions\r\n    appCompatVersion = '1.1.0'\r\n    cardViewVersion = '1.0.0'\r\n    constraintLayoutVersion = '1.1.3'\r\n    coreKTXVersion = '1.3.0'\r\n    coreTestingVersion = '1.1.1'\r\n    daggerVersion = '2.28'\r\n    glideVersion = '4.11.0'\r\n    gsonVersion = '2.8.6'\r\n    jUnitVersion = '4.13'\r\n    materialVersion = '1.1.0'\r\n    mockitoKotlinInlineVersion = '3.3.3'\r\n    mockitoKotlinVersion = '2.2.0'\r\n    okHttpLoggingInterceptorVersion = '4.7.2'\r\n    pagingVersion = '2.1.2'\r\n    reactiveStreamsVersion = '2.2.0'\r\n    recyclerViewVersion = '1.1.0'\r\n    retrofitVersion = '2.9.0'\r\n    roomVersion = '2.2.5'\r\n    rxAndroidVersion = '2.1.1'\r\n    rxJavaVersion = '2.2.19'\r\n    swipeRefreshLayoutVersion = '1.1.0'\r\n    viewPagerVersion = '1.0.0'\r\n\r\n    //Core Testing\r\n    coreTestingLib = \"android.arch.core:core-testing:$coreTestingVersion\"\r\n\r\n    //Dagger\r\n    daggerCompiler = \"com.google.dagger:dagger-compiler:$daggerVersion\"\r\n    daggerLib = \"com.google.dagger:dagger:$daggerVersion\"\r\n\r\n    //Glide\r\n    glideCompiler = \"com.github.bumptech.glide:compiler:$glideVersion\"\r\n    glideLib = \"com.github.bumptech.glide:glide:$glideVersion\"\r\n\r\n    //Gson\r\n    gsonLib = \"com.google.code.gson:gson:$gsonVersion\"\r\n\r\n    //JUnit\r\n    jUnitLib = \"junit:junit:$jUnitVersion\"\r\n\r\n    //Kotlin\r\n    kotlinLib = \"org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version\"\r\n\r\n    //KTX\r\n    ktxLib = \"androidx.core:core-ktx:$coreKTXVersion\"\r\n\r\n    //Material\r\n    materialLib = \"com.google.android.material:material:$materialVersion\"\r\n\r\n    //Mockito\r\n    mockitoLib = \"com.nhaarman.mockitokotlin2:mockito-kotlin:$mockitoKotlinVersion\"\r\n    mockitoInlineLib = \"org.mockito:mockito-inline:$mockitoKotlinInlineVersion\"\r\n\r\n    //OkHttp\r\n    okHttpInterceptorLib = \"com.squareup.okhttp3:logging-interceptor:$okHttpLoggingInterceptorVersion\"\r\n\r\n    //Reactive Streams\r\n    reactiveStreamsLib = \"androidx.lifecycle:lifecycle-reactivestreams-ktx:$reactiveStreamsVersion\"\r\n\r\n    //Retrofit\r\n    retrofitGsonLib = \"com.squareup.retrofit2:converter-gson:$retrofitVersion\"\r\n    retrofitRxJavaLib = \"com.squareup.retrofit2:adapter-rxjava2:$retrofitVersion\"\r\n\r\n    //Room\r\n    roomCompiler = \"androidx.room:room-compiler:$roomVersion\"\r\n    roomLib = \"androidx.room:room-runtime:$roomVersion\"\r\n    roomRxJavaLib = \"androidx.room:room-rxjava2:$roomVersion\"\r\n\r\n    //Rx\r\n    rxAndroidLib = \"io.reactivex.rxjava2:rxandroid:$rxAndroidVersion\"\r\n    rxJavaLib = \"io.reactivex.rxjava2:rxjava:$rxJavaVersion\"\r\n\r\n    //Views\r\n    appCompatLib = \"androidx.appcompat:appcompat:$appCompatVersion\"\r\n    cardViewLib = \"androidx.cardview:cardview:$cardViewVersion\"\r\n    constraintLayoutLib = \"androidx.constraintlayout:constraintlayout:$constraintLayoutVersion\"\r\n    recyclerViewLib = \"androidx.recyclerview:recyclerview:$recyclerViewVersion\"\r\n    swipeRefreshLayoutLib = \"androidx.swiperefreshlayout:swiperefreshlayout:$swipeRefreshLayoutVersion\"\r\n    viewPagerLib = \"androidx.viewpager2:viewpager2:$viewPagerVersion\"\r\n}\r\n\r\ntask clean(type: Delete) {\r\n    delete rootProject.buildDir\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- build.gradle	(revision 9c144a408bc58f8be237513c0c1cccbde003e498)
+++ build.gradle	(date 1603947353855)
@@ -9,7 +9,7 @@
         
     }
     dependencies {
-        classpath 'com.android.tools.build:gradle:4.0.1'
+        classpath 'com.android.tools.build:gradle:4.1.0'
         classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
 
         // NOTE: Do not place your application dependencies here; they belong
Index: settings.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>include ':domain'\r\nrootProject.name='RickAndMortyPlatzi'\r\ninclude ':app'
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- settings.gradle	(revision 9c144a408bc58f8be237513c0c1cccbde003e498)
+++ settings.gradle	(date 1603655485970)
@@ -1,3 +1,4 @@
+include ':data'
 include ':domain'
 rootProject.name='RickAndMortyPlatzi'
 include ':app'
\ No newline at end of file
Index: data/src/main/java/com/acuscorp/data/Repositories.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- data/src/main/java/com/acuscorp/data/Repositories.kt	(date 1603946703236)
+++ data/src/main/java/com/acuscorp/data/Repositories.kt	(date 1603946703236)
@@ -0,0 +1,7 @@
+package com.acuscorp.data
+
+class CharacterRepository(
+    private val remoteCharacterDataSource: RemoteCharacterDataSource
+){
+    fun getAllCharacters(page: Int) =  remoteCharacterDataSource.getAllCharacters(page)
+}
\ No newline at end of file
Index: data/src/androidTest/java/com/acuscorp/data/ExampleInstrumentedTest.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- data/src/androidTest/java/com/acuscorp/data/ExampleInstrumentedTest.kt	(date 1603655486158)
+++ data/src/androidTest/java/com/acuscorp/data/ExampleInstrumentedTest.kt	(date 1603655486158)
@@ -0,0 +1,24 @@
+package com.acuscorp.data
+
+import androidx.test.platform.app.InstrumentationRegistry
+import androidx.test.ext.junit.runners.AndroidJUnit4
+
+import org.junit.Test
+import org.junit.runner.RunWith
+
+import org.junit.Assert.*
+
+/**
+ * Instrumented test, which will execute on an Android device.
+ *
+ * See [testing documentation](http://d.android.com/tools/testing).
+ */
+@RunWith(AndroidJUnit4::class)
+class ExampleInstrumentedTest {
+    @Test
+    fun useAppContext() {
+        // Context of the app under test.
+        val appContext = InstrumentationRegistry.getInstrumentation().targetContext
+        assertEquals("com.acuscorp.data.test", appContext.packageName)
+    }
+}
\ No newline at end of file
Index: data/src/test/java/com/acuscorp/data/ExampleUnitTest.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- data/src/test/java/com/acuscorp/data/ExampleUnitTest.kt	(date 1603655486189)
+++ data/src/test/java/com/acuscorp/data/ExampleUnitTest.kt	(date 1603655486189)
@@ -0,0 +1,17 @@
+package com.acuscorp.data
+
+import org.junit.Test
+
+import org.junit.Assert.*
+
+/**
+ * Example local unit test, which will execute on the development machine (host).
+ *
+ * See [testing documentation](http://d.android.com/tools/testing).
+ */
+class ExampleUnitTest {
+    @Test
+    fun addition_isCorrect() {
+        assertEquals(4, 2 + 2)
+    }
+}
\ No newline at end of file
Index: data/proguard-rules.pro
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- data/proguard-rules.pro	(date 1603655485673)
+++ data/proguard-rules.pro	(date 1603655485673)
@@ -0,0 +1,21 @@
+# Add project specific ProGuard rules here.
+# You can control the set of applied configuration files using the
+# proguardFiles setting in build.gradle.
+#
+# For more details, see
+#   http://developer.android.com/guide/developing/tools/proguard.html
+
+# If your project uses WebView with JS, uncomment the following
+# and specify the fully qualified class name to the JavaScript interface
+# class:
+#-keepclassmembers class fqcn.of.javascript.interface.for.webview {
+#   public *;
+#}
+
+# Uncomment this to preserve the line number information for
+# debugging stack traces.
+#-keepattributes SourceFile,LineNumberTable
+
+# If you keep the line number information, uncomment this to
+# hide the original source file name.
+#-renamesourcefileattribute SourceFile
\ No newline at end of file
Index: data/src/main/java/com/acuscorp/data/DataSources.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- data/src/main/java/com/acuscorp/data/DataSources.kt	(date 1603947219772)
+++ data/src/main/java/com/acuscorp/data/DataSources.kt	(date 1603947219772)
@@ -0,0 +1,7 @@
+package com.acuscorp.data
+
+import io.reactivex.Single
+
+interface RemoteCharacterDataSource{
+    fun getAllCharacters(page: Int): Single<List<com.platzi.android.rickandmorty.domain.Character>>
+}
\ No newline at end of file
Index: .idea/misc.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"ProjectRootManager\" version=\"2\" languageLevel=\"JDK_1_7\" project-jdk-name=\"1.8\" project-jdk-type=\"JavaSDK\">\r\n    <output url=\"file://$PROJECT_DIR$/build/classes\" />\r\n  </component>\r\n  <component name=\"ProjectType\">\r\n    <option name=\"id\" value=\"Android\" />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/misc.xml	(revision 9c144a408bc58f8be237513c0c1cccbde003e498)
+++ .idea/misc.xml	(date 1603655533360)
@@ -1,6 +1,6 @@
 <?xml version="1.0" encoding="UTF-8"?>
 <project version="4">
-  <component name="ProjectRootManager" version="2" languageLevel="JDK_1_7" project-jdk-name="1.8" project-jdk-type="JavaSDK">
+  <component name="ProjectRootManager" version="2" languageLevel="JDK_1_8" default="true" project-jdk-name="1.8" project-jdk-type="JavaSDK">
     <output url="file://$PROJECT_DIR$/build/classes" />
   </component>
   <component name="ProjectType">
diff --git data/consumer-rules.pro data/consumer-rules.pro
new file mode 100644
